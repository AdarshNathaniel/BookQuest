<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[api.controller = function() {
    var c = this;
   
};

]]></client_script>
        <controller_as>c</controller_as>
        <css>/* Global reset */
* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

h1 {
  text-align: center;
  font-weight: bold;
  padding-bottom: 20px;
}

body {
  font-family: Arial, sans-serif;
  background-color: #f5f5f5;
  padding: 20px;
}

.container {
  max-width: 1100px; /* Reduced max-width */
  margin: 0 auto;
}

.card {
  display: flex;
  flex-direction: row;
  border: 1px solid #ddd;
  border-radius: 5px;
  overflow: hidden;
  background-color: #7091e6;
  margin-bottom: 20px;
  margin-left: 30px; /* Adjusted left margin */
  margin-right: 30px; /* Adjusted right margin */
}

.card .row {
  flex: 1;
}

.card-body {
  padding: 20px;
}

.card-title {
  font-size: 2.5rem;
  margin-bottom: 10px;
}

.card-text {
  font-size: 2rem;
  margin-bottom: 5px;
}

.book-cover {
  width: 100%; /* Ensure the image fills its container */
  height: auto; /* Allow the height to adjust based on content */
  max-width: 50%; /* Limit image size */
  border-radius: 5px 0 0 5px; /* Rounded corners on the left side */
  flex: 1 0 auto; /* Ensure image can grow but not shrink */
}

@media (max-width: 768px) {
  .card {
    flex-direction: column;
    margin-left: 0; /* Adjust margin for small screens */
    margin-right: 0; /* Adjust margin for small screens */
  }

  .col-md-4 {
    flex: 1 0 auto;
    width: 100%;
  }

  .col-md-8 {
    flex: 1 0 auto;
    width: 100%;
  }

  .book-cover {
    border-radius: 5px 5px 0 0; /* Rounded corners on top for small screens */
  }
}
</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>borrowed_books</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>Borrowed Books</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
    // Get the current user's user ID
    var currentUserId = gs.getUserID();
    var borrowedBooks = [];

    // Create a GlideRecord object for the Borrow table
    var borrowGR = new GlideRecord('x_1383151_bkquest_borrow');

    // Add a query to filter records by the current user ID
    borrowGR.addQuery('user_id', currentUserId);
    borrowGR.query();

    // Iterate through the Borrow records for the current user
    while (borrowGR.next()) {
        // Get the Book Instance ID from the Borrow record
        var bookInstanceId = borrowGR.book_id;

        // Create a GlideRecord object for the Book Instance table
        var bookInstanceGR = new GlideRecord('x_1383151_bkquest_book_copy');
        
        // Add a query to filter by the Book Instance ID
        bookInstanceGR.get(bookInstanceId);

        // Get the Book ID from the Book Instance record
        var bookId = bookInstanceGR.title;

        // Create a GlideRecord object for the Book Definition table
        var bookDefinitionGR = new GlideRecord('x_1383151_bkquest_book');
        
        // Add a query to filter by the Book ID
        bookDefinitionGR.get(bookId);

        // Create a GlideRecord object for the Author table
        var authorGR = new GlideRecord('x_1383151_bkquest_author');
        
        // Add a query to filter by the Author ID
        authorGR.get(bookDefinitionGR.author);

        // Get the cover image URL
        var coverImageURL = bookDefinitionGR.cover_image ? '/sys_attachment.do?sys_id=' + bookDefinitionGR.cover_image : '';

        // Add the book details to the result array
        borrowedBooks.push({
            borrowId: borrowGR.number.toString(),
            borrowDate: borrowGR.borrow_date.toString(),
            dueDate: borrowGR.due_date.toString(),
					  returnedDate: borrowGR.returned_date.toString(),
            title: bookDefinitionGR.title.toString(),
            author: authorGR.full_name.toString(),
            publisher: bookDefinitionGR.publisher.toString(),
            dateOfPublication: bookDefinitionGR.date_of_publication.toString(),
            coverImage: coverImageURL
        });
    }

    // Return the result to the client
    data.borrowedBooks = borrowedBooks;
})();
]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>harini.srija</sys_created_by>
        <sys_created_on>2024-06-04 08:27:35</sys_created_on>
        <sys_id>232fd7c693ee8210ef267c5efaba1049</sys_id>
        <sys_mod_count>93</sys_mod_count>
        <sys_name>Borrowed Books</sys_name>
        <sys_package display_value="BookQuest" source="x_1383151_bkquest">327b26db93250210ef267c5efaba100f</sys_package>
        <sys_policy/>
        <sys_scope display_value="BookQuest">327b26db93250210ef267c5efaba100f</sys_scope>
        <sys_update_name>sp_widget_232fd7c693ee8210ef267c5efaba1049</sys_update_name>
        <sys_updated_by>harini.srija</sys_updated_by>
        <sys_updated_on>2024-06-17 15:03:10</sys_updated_on>
        <template><![CDATA[<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Borrowed Books</title>
  <h1> My Books</h1>
  <link rel="stylesheet" href="styles.css">
</head>
<body>
  <div class="container">
    <div class="row">
      <!-- AngularJS ng-repeat loop to display borrowed books -->
      <div class="col-12 book-item" ng-repeat="book in c.data.borrowedBooks">
        <div class="card mb-4">
          <div class="row no-gutters">
            <div class="col-md-4">
              <img ng-src="{{book.coverImage}}" alt="{{book.title}} cover" class="book-cover img-fluid">
            </div>
            <div class="col-md-8 d-flex flex-column">
              <div class="card-body">
                <h2 class="card-title"><strong>{{book.title}}</strong></h2>
                <p class="card-text"><strong>Author:</strong> {{book.author}}</p>
                <p class="card-text"><strong>Borrow ID:</strong> {{book.borrowId}}</p>
                <p class="card-text"><strong>Borrow Date:</strong> {{book.borrowDate}}</p>
                <p class="card-text"><strong>Due Date:</strong> {{book.dueDate}}</p>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</body>
</html>
]]></template>
    </sp_widget>
</record_update>
