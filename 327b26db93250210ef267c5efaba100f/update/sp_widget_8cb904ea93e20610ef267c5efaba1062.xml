<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[api.controller = function($location, $scope) {
  var c = this;

  c.searchKeyword = '';
  c.filteredBooks = [];
  c.suggestions = [];
  c.showSuggestions = false;

  c.addNewBook = function() {
    $location.search({id: "fn_create_book"});
  };

  c.openBook = function(sysID) {
    var portalURL = $location.absUrl().split('?')[0];
    var pageID = 'book_details_page_v1';
    var url = portalURL + '?id=' + pageID + '&sys_id=' + sysID;
    window.location.href = url;
  };

  c.search = function() {
    if (c.searchKeyword.trim() === '') {
      c.filteredBooks = [];
      c.showSuggestions = false;
    } else {
      c.filteredBooks = c.data.books.filter(function(book) {
        return book.title.toLowerCase().includes(c.searchKeyword.toLowerCase());
      });
      c.updateSuggestions();
    }
  };

  c.updateSuggestions = function() {
    c.suggestions = c.filteredBooks.slice(0, 5); // Limit to top 5 suggestions
    c.showSuggestions = true;
  };

  c.selectSuggestion = function(book) {
    c.searchKeyword = book.title;
    c.showSuggestions = false;
    c.openBook(book.sys_id);
  };

  // Watch for changes in the search keyword to dynamically filter books
  $scope.$watch(function() {
    return c.searchKeyword;
  }, function(newVal, oldVal) {
    c.search();
  });
};
]]></client_script>
        <controller_as>c</controller_as>
        <css>.search-container {
  text-align: center;
  margin-top: 50px;
  margin-bottom: 30px;
}

.search-title {
  font-size: 2.5em;
  margin-bottom: 20px;
  color: white;
}

.search-form {
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative; /* Added to position suggestions relative to the form */
}

.form-group {
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  max-width: 500px; /* Reduced max-width for the search bar */
}

.search-input {
  width: 100%; /* Full width */
  padding: 10px 40px 10px 20px; /* Padding adjusted for icon placement */
  font-size: 1.2em; /* Adjust font size as needed */
  border-radius: 25px; /* Fully rounded corners */
  border: 1px solid #ccc;
}

.search-button {
  position: absolute;
  right: 10px; /* Position the button within the input */
  top: 50%;
  transform: translateY(-50%);
  border: none;
  background: transparent;
  padding: 0;
  cursor: pointer;
}

.search-button .glyphicon {
  font-size: 1.5em;
  color: #3D5280;
}

.search-button:hover .glyphicon {
  color: #24334C;
}

.autocomplete-suggestions {
  position: absolute;
  top: 100%; /* Positioned below the search input */
  left: 0;
  width: 100%; /* Match width of the form-group */
  max-height: 150px; /* Reduced max-height for smaller suggestion box */
  overflow-y: auto;
  background-color: #fff;
  border: 1px solid #ccc;
  border-top: none;
  border-radius: 0 0 25px 25px;
  z-index: 1000;
  list-style: none;
  padding: 0;
  margin: 0;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}

.autocomplete-suggestions li {
  padding: 10px;
  cursor: pointer;
  transition: background-color 0.3s ease;
  border-bottom: 1px solid #ccc; /* Add line after each suggestion */
}

.autocomplete-suggestions li:nth-child(odd) {
  background-color: #f9f9f9; /* Light grey background */
}

.autocomplete-suggestions li:nth-child(even) {
  background-color: #fff; /* White background */
}

.autocomplete-suggestions li:hover {
  background-color: #f0f0f0;
}

.autocomplete-suggestions li.selected {
  background-color: #3D5280;
  color: white;
}
</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>book_search_widget_v2</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>Book Search WIdget v2</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
	if (!input) {
		data.books = [];
		var bookGR = new GlideRecordSecure('x_1383151_bkquest_book');
		bookGR.orderBy('title');
		bookGR.query();

		while (bookGR.next()) {
			var coverImageSysId = bookGR.getValue('cover_image');
			var coverImageUrl = '';

			if (coverImageSysId) {
          var coverImageGR = new GlideRecord('sys_attachment');
          if (coverImageGR.get(coverImageSysId)) {
            coverImageUrl = '/sys_attachment.do?sys_id=' + coverImageSysId;
          }
        } else {
          // Default cover image URL
          coverImageUrl = '/NoBookImage.jpg';
        }

			var authorSysId = bookGR.getValue('author');
			var authorName = '';
			if (authorSysId) {
				var authorGR = new GlideRecord('x_1383151_bkquest_author');
				if (authorGR.get(authorSysId)) {
					authorName = authorGR.getDisplayValue();
				}
			}
			// Assign default value if author name is empty
        if (!authorName) {
          authorName = 'Unknown';
        }

			// Fetch the plot summary from the book record
			var plotSummary = bookGR.getValue('plot_summary') || 'No plot summary available';

			data.books.push({
				'sys_id': bookGR.getUniqueValue(),
				'title': bookGR.getDisplayValue('title'),
				'author': authorName,
				'cover_image': coverImageUrl,
				'plot_summary': plotSummary
			});
		}
	}

	if (input) {
		// Add server-side functionality here if needed
	}
})();
]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>adarsh.nathaniel</sys_created_by>
        <sys_created_on>2024-06-05 06:11:47</sys_created_on>
        <sys_id>8cb904ea93e20610ef267c5efaba1062</sys_id>
        <sys_mod_count>76</sys_mod_count>
        <sys_name>Book Search WIdget v2</sys_name>
        <sys_package display_value="BookQuest" source="x_1383151_bkquest">327b26db93250210ef267c5efaba100f</sys_package>
        <sys_policy/>
        <sys_scope display_value="BookQuest">327b26db93250210ef267c5efaba100f</sys_scope>
        <sys_update_name>sp_widget_8cb904ea93e20610ef267c5efaba1062</sys_update_name>
        <sys_updated_by>harini.srija</sys_updated_by>
        <sys_updated_on>2024-07-22 05:34:13</sys_updated_on>
        <template><![CDATA[<div class="search-container">
 <!-- <h1 class="search-title">Ready to start your Quest?</h1> -->
  <form class="search-form" role="search" ng-submit="c.search()">
    <div class="form-group">
      <input type="text" class="form-control search-input" ng-model="c.searchKeyword" placeholder="Search books" autocomplete="off">
      <button type="submit" class="search-button">
        <span class="glyphicon glyphicon-search" aria-hidden="true"></span>
      </button>
      <ul ng-show="c.showSuggestions" class="autocomplete-suggestions">
        <li ng-repeat="book in c.suggestions" ng-click="c.selectSuggestion(book)">
          {{ book.title }}
        </li>
      </ul>
    </div>
  </form>
</div>
]]></template>
    </sp_widget>
</record_update>
