<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>false</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_1383151_bkquest_book</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Store Book Details</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
    var isbn = current.isbn; // Assuming 'isbn' is a field in your table
    var googleBooksAPI = new GoogleBooksAPI();
    var bookDetails = googleBooksAPI.getBookByISBN(isbn);

    if (bookDetails) {
        var bookRecord = new GlideRecord('x_1383151_bkquest_book');

        // Assuming isbn is unique and checking if the book already exists
        bookRecord.addQuery('isbn', isbn);
        bookRecord.query();
        if (bookRecord.next()) {
            // Update existing record
            bookRecord.title = bookDetails.title;
            bookRecord.author = googleBooksAPI.getAuthorReference(bookDetails.authors[0]); // Use helper method
            bookRecord.plot_summary = bookDetails.description;
            bookRecord.publisher = googleBooksAPI.getPublisherReference(bookDetails.publisher); // Use helper method
            bookRecord.date_of_publication = bookDetails.publishedDate;
            bookRecord.language = bookDetails.language;
            bookRecord.no_of_pages = bookDetails.pageCount;
            bookRecord.genre = googleBooksAPI.getGenreReference(bookDetails.categories[0]); // Use helper method
            // Add additional fields as necessary
            bookRecord.update();
        } else {
            // Create new record
            bookRecord.initialize();
            bookRecord.title = bookDetails.title;
            bookRecord.author = googleBooksAPI.getAuthorReference(bookDetails.authors[0]);
            bookRecord.plot_summary = bookDetails.description;
            bookRecord.publisher = googleBooksAPI.getPublisherReference(bookDetails.publisher);
            bookRecord.date_of_publication = bookDetails.publishedDate;
            bookRecord.language = bookDetails.language;
            bookRecord.no_of_pages = bookDetails.pageCount;
            bookRecord.genre = googleBooksAPI.getGenreReference(bookDetails.categories[0]);
            // Add additional fields as necessary
            bookRecord.insert();
        }
    } else {
        gs.error('Failed to retrieve book details.');
    }
})(current, previous);
]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>harini.srija</sys_created_by>
        <sys_created_on>2024-07-16 05:30:59</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>0f888f6f93d74210ef267c5efaba10e4</sys_id>
        <sys_mod_count>2</sys_mod_count>
        <sys_name>Store Book Details</sys_name>
        <sys_overrides/>
        <sys_package display_value="BookQuest" source="x_1383151_bkquest">327b26db93250210ef267c5efaba100f</sys_package>
        <sys_policy/>
        <sys_scope display_value="BookQuest">327b26db93250210ef267c5efaba100f</sys_scope>
        <sys_update_name>sys_script_0f888f6f93d74210ef267c5efaba10e4</sys_update_name>
        <sys_updated_by>harini.srija</sys_updated_by>
        <sys_updated_on>2024-07-16 13:59:58</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=0f888f6f93d74210ef267c5efaba10e4"/>
</record_update>
