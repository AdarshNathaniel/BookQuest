<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_1383151_bkquest.BorrowedUtils</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description/>
        <name>BorrowedUtils</name>
        <script><![CDATA[var BorrowedUtils = Class.create();
BorrowedUtils.prototype = {

    initialize: function() {},

    getBorrowedBooks: function() {
        var userId = gs.getUserID();
        var borrowedBooks = [];

        var borrowGR = new GlideRecord('x_1383151_bkquest_borrow');
        borrowGR.addQuery('sys_created_by', userId);
        borrowGR.query();

        while (borrowGR.next()) {
            var bookInstanceGR = new GlideRecord('x_1383151_bkquest_book_copy');
            if (bookInstanceGR.get(borrowGR.getValue('book_id'))) {
                var bookDefinitionGR = new GlideRecord('x_1383151_bkquest_book');
                if (bookDefinitionGR.get(bookInstanceGR.getValue('title'))) {
                    var coverImageURL = bookDefinitionGR.cover_image ? '/sys_attachment.do?sys_id=' + bookDefinitionGR.cover_image : '';

                    borrowedBooks.push({
                        borrowSysId: borrowGR.getValue('sys_id'),
                        bookInstanceSysId: bookInstanceGR.getDisplayValue('sys_id'),
                        bookDefinitionSysId: bookDefinitionGR.getValue('sys_id'),
                        bookTitle: bookDefinitionGR.getValue('title'),
                        bookAuthor: bookDefinitionGR.getValue('author'),
                        coverImage: coverImageURL,
                        borrowDate: borrowGR.getValue('borrow_date'),
                        dueDate: borrowGR.getValue('due_date'),
                        borrowStatus: borrowGR.getValue('borrow_status')
                    });
                }
            }
        }

        return borrowedBooks;
    },

    type: 'BorrowedUtils'
};
]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>harini.srija</sys_created_by>
        <sys_created_on>2024-06-25 17:23:19</sys_created_on>
        <sys_id>820361c9930f0210ef267c5efaba109b</sys_id>
        <sys_mod_count>8</sys_mod_count>
        <sys_name>BorrowedUtils</sys_name>
        <sys_package display_value="BookQuest" source="x_1383151_bkquest">327b26db93250210ef267c5efaba100f</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="BookQuest">327b26db93250210ef267c5efaba100f</sys_scope>
        <sys_update_name>sys_script_include_820361c9930f0210ef267c5efaba109b</sys_update_name>
        <sys_updated_by>harini.srija</sys_updated_by>
        <sys_updated_on>2024-06-27 15:37:13</sys_updated_on>
    </sys_script_include>
</record_update>
