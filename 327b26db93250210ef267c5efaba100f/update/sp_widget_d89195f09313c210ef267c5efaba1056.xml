<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[api.controller = function($location, $scope) {
  var c = this;

  c.searchKeyword = '';
  c.filteredBooks = [];
  c.suggestions = [];
  c.showSuggestions = false;

  c.addNewBook = function() {
    $location.search({id: "fn_create_book"});
  };

  c.openBook = function(sysID) {
    var portalURL = $location.absUrl().split('?')[0];
    var pageID = 'book_details_page_v1';
    var url = portalURL + '?id=' + pageID + '&sys_id=' + sysID;
    window.location.href = url;
  };

  c.search = function() {
    if (c.searchKeyword.trim().length < 2) {
      c.filteredBooks = [];
      c.showSuggestions = false;
    } else {
      c.filteredBooks = c.data.books.filter(function(book) {
        return book.title.toLowerCase().includes(c.searchKeyword.toLowerCase());
      });
      c.updateSuggestions();
    }
  };

  c.updateSuggestions = function() {
    c.suggestions = c.filteredBooks.slice(0, 5); // Limit to top 5 suggestions
    c.showSuggestions = true;
  };

  c.selectSuggestion = function(book) {
    c.searchKeyword = book.title;
    c.showSuggestions = false;
    c.openBook(book.sys_id);
  };

  // Watch for changes in the search keyword to dynamically filter books
  $scope.$watch(function() {
    return c.searchKeyword;
  }, function(newVal, oldVal) {
    c.search();
  });
};
]]></client_script>
        <controller_as>c</controller_as>
        <css>@import url('https://fonts.googleapis.com/css2?family=Margarine&amp;display=swap');

/* Resetting margins and padding for all elements */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

/* General body and font styles */
body {
    font-family: Arial, sans-serif; /* Fallback font */
    line-height: 1.6;
    background-color: #f0f0f0; /* Example background color */
}

/* Styles for homepage-search section */
#homepage-search {
    padding: 20px;
    margin-top: -20px; /* Move the whole section up */
    margin-bottom: 0; 
}

.container {
    display: flex;
    flex-wrap: wrap; /* Enable wrapping */
    /* justify-content: space-between; Space between text and image */
    align-items: flex-start; /* Align items to the top */
    max-width: 1200px;
    margin: auto;
}

/* Container for text */
.text-container {
    flex: 1;
    color: #3d52a0;
    padding: 20px;
    max-width: 50%; /* Adjust width to move text further left */
    margin-right: 10px; /* Increase margin to create more space between text and image */
}

.text-container h1 {
    margin: 0; /* Remove top margin */
    font-size: 3em; /* Increase heading size */
    padding-bottom: 30px;
    text-align: center;
}

.text-container p {
    margin: 10px 0 20px; /* Adjust margins */
    font-size: 1.2em; /* Increase paragraph text size */
    text-align: justify; /* Justify paragraph text */
    padding-bottom: 30px;
}

.search-container {
    margin-top: 20px; /* Space between text and search bar */
}

.search-form {
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative; /* Added to position suggestions relative to the form */
}

.form-group {
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100%;
    max-width: 700px; /* Increased max-width for the search bar */
}

.search-input {
    width: 100%; /* Full width */
    padding: 10px 40px 10px 20px; /* Padding adjusted for icon placement */
    font-size: 1.2em; /* Adjust font size as needed */
    border-radius: 25px; /* Fully rounded corners */
    border: 1px solid #ccc;
}

.search-button {
    position: absolute;
    right: 10px; /* Position the button within the input */
    top: 50%;
    transform: translateY(-50%);
    border: none;
    background: transparent;
    padding: 0;
    cursor: pointer;
}

.search-button .glyphicon {
    font-size: 1.5em;
    color: #3D5280;
}

.search-button:hover .glyphicon {
    color: #24334C;
}


.autocomplete-suggestions {
    position: absolute;
    top: 100%; /* Positioned below the search input */
    left: 0;
    width: 100%; /* Match width of the form-group */
    max-height: 150px; /* Reduced max-height for smaller suggestion box */
    overflow-y: auto;
    background-color: #fff;
    border: 1px solid #ccc;
    border-top: none;
    border-radius: 0 0 25px 25px;
    z-index: 1000;
    list-style: none;
    padding: 0;
    margin: 0;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}

.autocomplete-suggestions li {
    padding: 10px;
    cursor: pointer;
    transition: background-color 0.3s ease;
    border-bottom: 1px solid #ccc; /* Add line after each suggestion */
}

.autocomplete-suggestions li:nth-child(odd) {
    background-color: #f9f9f9; /* Light grey background */
}

.autocomplete-suggestions li:nth-child(even) {
    background-color: #fff; /* White background */
}

.autocomplete-suggestions li:hover {
    background-color: #f0f0f0;
}

.autocomplete-suggestions li.selected {
    background-color: #3D5280;
    color: white;
}

/* Margarine font styles */
.margarine-regular {
    font-family: "Margarine", sans-serif;
    font-weight: 400;
    font-style: normal;
}

/* Justify paragraph text */
.justify {
    text-align: justify;
}

/* Container for image */
.image-container {
    flex: 1;
    display: flex;
    justify-content: flex-end;
    padding: 2rem;
    width: 50%;
    /* Optionally, add a margin to move the container up */
    margin-top: -2.5rem; /* Adjust as needed */
}

.book-image {
    max-width: 100%; /* Adjust the image to fit within its container */
    max-width: 900px; /* Increase max-width to make the image larger */
    /* Add margin or adjust positioning to move the image up */
    margin-top: -1rem; /* Adjust as needed */
    /* Alternatively, use positioning */
    position: relative;
    top: -1rem; /* Adjust as needed */
}
</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>bkq_carousel</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>BookQuest Homepage</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
	if (!input) {
		data.books = [];
		var bookGR = new GlideRecordSecure('x_1383151_bkquest_book');
		bookGR.orderBy('title');
		bookGR.query();

		while (bookGR.next()) {
			var coverImageSysId = bookGR.getValue('cover_image');
			var coverImageUrl = '';

			if (coverImageSysId) {
          var coverImageGR = new GlideRecord('sys_attachment');
          if (coverImageGR.get(coverImageSysId)) {
            coverImageUrl = '/sys_attachment.do?sys_id=' + coverImageSysId;
          }
        } else {
          // Default cover image URL
          coverImageUrl = '/NoBookImage.jpg';
        }

			var authorSysId = bookGR.getValue('author');
			var authorName = '';
			if (authorSysId) {
				var authorGR = new GlideRecord('x_1383151_bkquest_author');
				if (authorGR.get(authorSysId)) {
					authorName = authorGR.getDisplayValue();
				}
			}
			// Assign default value if author name is empty
        if (!authorName) {
          authorName = 'Unknown';
        }

			// Fetch the plot summary from the book record
			var plotSummary = bookGR.getValue('plot_summary') || 'No plot summary available';

			data.books.push({
				'sys_id': bookGR.getUniqueValue(),
				'title': bookGR.getDisplayValue('title'),
				'author': authorName,
				'cover_image': coverImageUrl,
				'plot_summary': plotSummary
			});
		}
	}

	if (input) {
		// Add server-side functionality here if needed
	}
})();
]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>harini.srija</sys_created_by>
        <sys_created_on>2024-07-07 07:43:34</sys_created_on>
        <sys_id>d89195f09313c210ef267c5efaba1056</sys_id>
        <sys_mod_count>123</sys_mod_count>
        <sys_name>BookQuest Homepage</sys_name>
        <sys_package display_value="BookQuest" source="x_1383151_bkquest">327b26db93250210ef267c5efaba100f</sys_package>
        <sys_policy/>
        <sys_scope display_value="BookQuest">327b26db93250210ef267c5efaba100f</sys_scope>
        <sys_update_name>sp_widget_d89195f09313c210ef267c5efaba1056</sys_update_name>
        <sys_updated_by>harini.srija</sys_updated_by>
        <sys_updated_on>2024-07-24 05:44:45</sys_updated_on>
        <template><![CDATA[<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>BookQuest</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Margarine&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="styles.css"> <!-- Link to your external stylesheet -->
</head>
<body>
    <div id="homepage-search" class="hidden-xs wrapper-xl">
        <div class="container">
            <div class="text-container">
                <h1 class="margarine-regular">"Where every page <br> is a new Adventure"</h1>
                <p class="justify">From classics to contemporary, BookQuest offers a wide selection of books to suit every taste and interest. Start exploring our shelves today and uncover your next literary gem.</p>
                <div class="search-container">
                    <form class="search-form" role="search" ng-submit="c.search()">
                        <div class="form-group">
                            <input type="text" class="form-control search-input" ng-model="c.searchKeyword" placeholder="Search books" autocomplete="off">
                            <button type="submit" class="search-button">
                                <span class="glyphicon glyphicon-search" aria-hidden="true"></span>
                            </button>
                            <ul ng-show="c.showSuggestions" class="autocomplete-suggestions">
                                <li ng-repeat="book in c.suggestions" ng-click="c.selectSuggestion(book)">
                                    {{ book.title }}
                                </li>
                            </ul>
                        </div>
                    </form>
                </div>
            </div>
           <div class="image-container">
                <img src="BookQuest.png" alt="book" class="book-image">
            </div> 
        </div>
    </div>
</body>
</html>
]]></template>
    </sp_widget>
</record_update>
