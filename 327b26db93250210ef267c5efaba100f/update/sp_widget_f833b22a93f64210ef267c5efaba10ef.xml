<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[api.controller=function($scope, $location) {
	// Assign the authors data from the server to the scope
	$scope.authorsWithBooks = $scope.data.authorsWithBooks;
	var c = this;
	//Function to navigate to the detailed book page
	c.openBook = function(sysID) {
		console.log(sysID)
		var portalURL = $location.absUrl().split('?')[0];
		var pageID = 'book_details_page_v1'; 
		var url = portalURL + '?id=' + pageID + '&sys_id=' + sysID;
		window.location.href = url;
	};

	// Function to load all books on page load
	c.onLoadLoadAllBooks = function() {
		// Assuming c.data.books is already populated with all books
		// This could be fetched from server or set directly in the UI page
	};
}]]></client_script>
        <controller_as>c</controller_as>
        <css>@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500&amp;display=swap');

* {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
}

body {
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: #F3F3F2;
  min-height: 100vh;
  font-family: 'Poppins', sans-serif;
  color: #2C3335;
}

.carddiv {
  border-radius: 10%;
}

.book-title {
  width: 100%;
  text-align: center;
  font-size: 1.3rem; /* Increased font size */
  font-weight: 500;
  margin-top: 10px; /* Space between image and title */
}

.container {
  background-color: #fff;
  min-height: 30vh;
  min-width: 700px;
  border-radius: 5px;
  box-shadow: 0 0 10px 1px rgba(0, 0, 0, 0.2);
  padding: 40px;
}

a {
  text-decoration: none;
}

li {
  list-style: none;
}

.card {
  border-radius: 5px;
  box-shadow: 0 0 10px 1px rgba(0, 0, 0, 0.1);
  margin-bottom: 20px;
  padding: 20px;
}

.card-body {
  padding: 0;
}

.card-title, .books-count, .about-author {
  padding-top: 20px;
  margin-left: 20px; /* Align all elements to the same margin */
}

.card-title {
  font-size: 4rem;
  font-weight: 600;
  margin-bottom: 10px;
}

.books-count {
  font-size: 2.5rem;
  font-weight: 500;
}

.img-fluid {
  max-width: 100%;
  height: auto;
  border-radius: 5px;
}

.about-author {
  text-align: justify;
  margin-top: 20px;
  padding-bottom: 10px; /* Add padding after "About the Author" */
}

.books {
  margin-top: 40px;
}

.books h2 {
  font-size: 2.25rem;
  font-weight: 500;
  margin-bottom: 15px;
}

.books .row {
  justify-content: flex-start; /* Align books to the left */
}

.book-item {
  text-align: center; /* Center align book item content */
  cursor: pointer;
  transition: 0.3s ease-in-out;
  display: flex;
  flex-direction: column;
  align-items: center;
}

.book-item img {
  display: block; /* Ensure image takes full width of container */
  margin-bottom: 10px;
  transition: 0.3s ease-in-out;
}

.book-item:hover img {
  transform: scale(1.05);
}

.book-item p {
  font-size: 1rem;
  font-weight: 400;
}</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>author_page_details</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>Author Page Details</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {

	// Create an array to store all authors with their details and books
	var authorsWithBooks = [];
	var authorID=$sp.getParameter('sys_id');
	console.log(authorID);
	// Create a GlideRecord object for the Author table
	var authorGR = new GlideRecord('x_1383151_bkquest_author');
	authorGR.addQuery('sys_id',authorID);
	authorGR.query();

	// Iterate through the Author records
	while (authorGR.next()) {
		var author = {
			fullName: authorGR.full_name.toString(),
			authorImage: authorGR.author_image ? '/sys_attachment.do?sys_id=' + authorGR.author_image : '',
			aboutTheAuthor: authorGR.about_the_author.toString(),
			booksWritten: authorGR.books_written.toString(),
			books: []
		};

		// Create a GlideRecord object for the Book Definition table
		var bookGR = new GlideRecord('x_1383151_bkquest_book');
		bookGR.addQuery('author', authorGR.sys_id);
		bookGR.query();

		// Iterate through the Book records for the current author
		while (bookGR.next()) {
			var book = {
				sys_id:bookGR.sys_id.toString(),
				title: bookGR.title.toString(),
				coverImage: bookGR.cover_image ? '/sys_attachment.do?sys_id=' + bookGR.cover_image : ''
			};
			author.books.push(book);
		}

		// Add the author with their books to the result array
		authorsWithBooks.push(author);
	}

	// Attach the result to the data object to pass it to the client-side script
	data.authorsWithBooks = authorsWithBooks;
})();
]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>harini.srija</sys_created_by>
        <sys_created_on>2024-06-18 04:48:06</sys_created_on>
        <sys_id>f833b22a93f64210ef267c5efaba10ef</sys_id>
        <sys_mod_count>144</sys_mod_count>
        <sys_name>Author Page Details</sys_name>
        <sys_package display_value="BookQuest" source="x_1383151_bkquest">327b26db93250210ef267c5efaba100f</sys_package>
        <sys_policy/>
        <sys_scope display_value="BookQuest">327b26db93250210ef267c5efaba100f</sys_scope>
        <sys_update_name>sp_widget_f833b22a93f64210ef267c5efaba10ef</sys_update_name>
        <sys_updated_by>harini.srija</sys_updated_by>
        <sys_updated_on>2024-06-21 06:38:11</sys_updated_on>
        <template><![CDATA[<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Authors and Their Books</title>
  <link rel="stylesheet" href="styles.css">
</head>
<body>
  <div class="container" style="background-color: #3d52a0; color: #fff;">
    <div class="row">
      <div class="col-12">
        <h1 style="padding-bottom: 40px;">The Author's Shelf</h1>
      </div>
    </div>

    <div class="row" ng-if="authorsWithBooks.length">
      <!-- AngularJS ng-repeat loop to display authors -->
      <div class="col-12" ng-repeat="author in authorsWithBooks">
        <div class="card mb-4 carddiv" style="background-color: #7091e6; color: #fff;">
          <div class="card-body">
            <div class="row" >
              <div class="col-md-4 text-center" style="padding-top: 30px;">
                <img ng-src="{{author.authorImage}}" alt="{{author.fullName}} Image" class="img-fluid">
              </div>
              <div class="col-md-8">
                <h2 class="card-title">{{author.fullName}}</h2>
                <h3 class="books-count">Books: {{author.booksWritten}}</h3>
                <hr>
                <div class="about-author">
                  <h3>About the Author</h3>
                  <p>{{author.aboutTheAuthor}}</p>
                </div>
              </div>
            </div>
            <div class="books mt-4">
              <h1 style="padding-bottom: 40px; margin-left: 40px"><strong>{{author.fullName}}'s Books</strong></h1>
              <div class="row">
                <!-- AngularJS ng-repeat loop to display books for each author -->
                <div class="col-md-4" ng-repeat="book in author.books">
                  <div class="book-item" ng-click="c.openBook(book.sys_id)">
                    <!--<a href="?id=book_details_page_v1">-->
                    <img ng-src="{{book.coverImage}}" alt="{{book.title}} cover" class="img-fluid">
                    <h3 class="book-title">{{book.title}}</h3>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <div class="row" ng-if="!authorsWithBooks.length">
      <div class="col-12">
        <p>No authors found.</p>
      </div>
    </div>
  </div>
</body>
</html>]]></template>
    </sp_widget>
</record_update>
