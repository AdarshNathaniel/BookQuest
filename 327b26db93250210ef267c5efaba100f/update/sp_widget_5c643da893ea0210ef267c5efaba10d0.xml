<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[api.controller=function() {
  /* widget controller */
  var c = this;
};]]></client_script>
        <controller_as>c</controller_as>
        <css>.book-item {
    margin-bottom: 20px;
    display: flex;
    justify-content: center;
}

.card {
    padding: 10px;
    border: 1px solid #ddd;
    border-radius: 5px;
    text-align: center;
    background-color: #fff;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    height: 400px; /* Fixed height for uniformity */
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    width: 100%; /* Ensures cards take up full width of column */
}

.book-cover {
    max-height: 200px; /* Adjust based on desired cover size */
    width: auto;
    margin: 0 auto 10px; /* Center the image and add bottom margin */
}

.book-title {
    font-weight: bold;
  	font-size: 1.2em;
    margin-top: 10px;
}

.book-author {
    color: #555;
    margin-bottom: 10px; /* Ensure spacing at the bottom */
}

.custom-button {
    background-color: #ADBBDA;
    color: white;
    border-color: #ADBBDA;
}

.custom-button:hover {
    background-color: #A1B0CC; /* Optional: A slightly darker shade for hover state */
    border-color: #A1B0CC; /* Optional: A slightly darker shade for hover state */
}
</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>book_list_widget</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>Book List Widget</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
	// Create a GlideRecord object for the 'x_1383151_bkquest_book' table
	var gr = new GlideRecord('x_1383151_bkquest_book');
	gr.query();

	// Create an array to hold the book records
	var books = [];

	// Loop through the records and push them to the array
	while (gr.next()) {
		var coverImageSysId = gr.getValue('cover_image');
		var coverImageUrl = '';

		// Fetch the cover image URL if it exists
		if (coverImageSysId) {
			var coverImageGR = new GlideRecord('sys_attachment');
			if (coverImageGR.get(coverImageSysId)) {
				coverImageUrl = '/sys_attachment.do?sys_id=' + coverImageSysId;
			}
		}

		// Fetch the author's name from the reference table
		var authorSysId = gr.getValue('author');
		var authorName = '';
		if (authorSysId) {
			var authorGR = new GlideRecord('x_1383151_bkquest_author');
			if (authorGR.get(authorSysId)) {
				authorName = authorGR.getDisplayValue(); // This gets the display value of the referenced record
			}
		}

		// Push the book details to the array
		books.push({
			cover_image: coverImageUrl,
			title: gr.getValue('title'),
			author: authorName
		});
	}

	// Make the data available to the client script
	data.books = books;
})();

]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>adarsh.nathaniel</sys_created_by>
        <sys_created_on>2024-05-30 08:50:04</sys_created_on>
        <sys_id>5c643da893ea0210ef267c5efaba10d0</sys_id>
        <sys_mod_count>17</sys_mod_count>
        <sys_name>Book List Widget</sys_name>
        <sys_package display_value="BookQuest" source="x_1383151_bkquest">327b26db93250210ef267c5efaba100f</sys_package>
        <sys_policy/>
        <sys_scope display_value="BookQuest">327b26db93250210ef267c5efaba100f</sys_scope>
        <sys_update_name>sp_widget_5c643da893ea0210ef267c5efaba10d0</sys_update_name>
        <sys_updated_by>adarsh.nathaniel</sys_updated_by>
        <sys_updated_on>2024-06-04 04:47:49</sys_updated_on>
        <template><![CDATA[<div class="container">
  <div class="row">
    <div class="book-item col-xs-12 col-sm-6 col-md-3 col-lg-3" ng-repeat="book in c.data.books">
      <div class="card">
        <img ng-src="{{book.cover_image}}" alt="{{book.title}} cover" class="book-cover img-responsive"/>
        <h3 class="book-title">{{book.title}}</h3>
        <p class="book-author">{{book.author}}</p>
        <a href="#/book/{{book.id}}" class="btn custom-button">View Details</a>
      </div>
    </div>
  </div>
</div>

<!--
<pre>{{data.books | json}}</pre>
-->]]></template>
    </sp_widget>
</record_update>
